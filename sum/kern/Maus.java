package sum.kern;/**Eine Maus realisiert die Mauseingabe des verwendeten Computers.Diese ist gekennzeichnet durch die aktuelle Position der Maus auf demBildschirm des Computers und die Betaetigung der Maustaste (Klick) zueinem bestimmten Zeitpunkt.@author Bernard Schriek@version 7.5 vom 29.10.2013*/public class Maus{/**Die Maus wird initialisiert.*/	public Maus()	{}	/**liefert die gegenwaertige horizontale Koordinate der Positionder Maus auf dem Bildschirm, unabhaengig davon, ob die Maus gedrueckt wurde.@return aktuelle horizontale position des Maus*/	public int hPosition()	{		try		{			Thread.sleep(1);		}		catch (Exception e)		{			System.out.println(e.toString());		}		 if (Bildschirm.topFenster != null)		 	return Bildschirm.topFenster.zMausHatPositionX;    	else    	{ 			Warnung warnung = new Warnung(Bildschirm.topFenster, "Der Bildschirm wurde nicht erzeugt."); 			warnung.setVisible(true); 			if (warnung.istOk()) 				System.exit(0); 			return -1;    	}	}/**liefert die gegenwaertige vertikale Koordinate der Positionder Maus auf dem Bildschirm, unabhaengig davon, ob die Maus gedrueckt wurde.@return aktuelle horizontale position des Maus*/	public int vPosition()	{		try		{			Thread.sleep(1);		}		catch (Exception e)		{			System.out.println(e.toString());		}		 if (Bildschirm.topFenster != null)		 	return Bildschirm.topFenster.zMausHatPositionY;    	else    	{ 			Warnung warnung = new Warnung(Bildschirm.topFenster, "Der Bildschirm wurde nicht erzeugt."); 			warnung.setVisible(true); 			if (warnung.istOk()) 				System.exit(0);		 	return -1;    	}	}	/**Prueft, ob eine Maustaste im Moment gedrueckt ist.@return true, wenn eine Maustaste gedrueckt ist.*/	public boolean istGedrueckt()	{		try		{			Thread.sleep(1);		}		catch (Exception e)		{			System.out.println(e.toString());		}		 if (Bildschirm.topFenster != null)		 	return Bildschirm.topFenster.zTasteIstUnten;		 else    	{ 			Warnung warnung = new Warnung(Bildschirm.topFenster, "Der Bildschirm wurde nicht erzeugt."); 			warnung.setVisible(true); 			if (warnung.istOk()) 				System.exit(0);		 	return false;    	}	}	/**Aus Kompatibilit&auml;tsgr&uuml;nden: spezialKlick() heisst jetzt doppelKlick().*/	public boolean spezialKlick()	{		return this.doppelKlick();	}	/**Prueft, ob ein Doppelklick stattgefunden hat.@return true, wenn ein Doppelklick stattgefunden hat.*/	public boolean doppelKlick()	{		try		{			Thread.sleep(1);		}		catch (Exception e)		{			System.out.println(e.toString());		}		 if (Bildschirm.topFenster != null)		 	if (Bildschirm.topFenster.zTasteIstDoppel)		 	{		 		Bildschirm.topFenster.zTasteIstDoppel = false;		 		return true;		 	}		 	else		 		return false;		 else    	{ 			Warnung warnung = new Warnung(Bildschirm.topFenster, "Der Bildschirm wurde nicht erzeugt."); 			if (warnung.istOk()) 				System.exit(0);		 	return false;    	}	}	 /** 	Dummy-Prozedur */ 	public void gibFrei() 	{}  	}