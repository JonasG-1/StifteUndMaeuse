package sum.netz;import java.io.*;/**Hilfsklasse fuer die ClientVerbindung, die in einem eigenen Thread den Empfang einer Nachricht vom Server realisiert.@author Bernard Schriek, Horst Hildebrecht@version 7.5 vom 29.10.2013*/class Clientempfaenger extends Thread implements Serializable{	// Objekte	private Clientverbindung kenntClientverbindung;		// Attribute	private boolean zMitNachrichten, zVerbindungAktiv;	/**	Der ClientEmpfaenger hat die zugeh&ouml;rige ClientVerbindung kennen gelernt.<br>	@param pClientVerbindung zugeh&ouml;rige ClientVerbindung, die die einkommenden Nachrichten bearbeitet	@param pTestModus Wenn true, werden bei jeder Operation Meldungen auf der Konsole ausgegeben.	*/	public Clientempfaenger(Clientverbindung pClientverbindung, boolean pTestModus)	{		kenntClientverbindung = pClientverbindung;		zMitNachrichten = pTestModus;		zVerbindungAktiv = true;	}		/**	Solange der Server Nachrichten sendete, wurden diese empfangen und an die ClientVerbindung weitergereicht.	*/	public void run()	{		String lNachricht;		boolean lNachrichtEmpfangen = true;				do			if (zVerbindungAktiv)			{				lNachricht = kenntClientverbindung.empfangeneNachricht();				lNachrichtEmpfangen = (lNachricht != null);				if (lNachrichtEmpfangen)					kenntClientverbindung.bearbeiteNachricht(lNachricht);				}		while (zVerbindungAktiv && lNachrichtEmpfangen);				if (zMitNachrichten && !lNachrichtEmpfangen)			System.out.println("Der Client hat die Verbindung zum Server verloren.");		kenntClientverbindung.bearbeiteVerbindungsverlust();	}		/**	Der ClientEmpfaenger arbeitet nicht mehr	*/	public void gibFrei()	{		zVerbindungAktiv = false;	}	}